#include <IRremote.h>

IRrecv rc(11);
decode_results results;

const int module1 = 5;
const int input1_m1 = 2;
const int input2_m1 = 3;

const int module2 = 6;
const int input1_m2 = 8;
const int input2_m2 = 9;

const int speed = 100;

void setup(){
  Serial.begin(9600);
  rc.enableIRIn();
  pinMode(module1,OUTPUT);
  pinMode(module2,OUTPUT);
  pinMode(input1_m1,OUTPUT);
  pinMode(input2_m1,OUTPUT);
  pinMode(input1_m2,OUTPUT);
  pinMode(input2_m2,OUTPUT);
  pinMode(7, INPUT);
}

void loop(){
  int PIR = digitalRead(7);
  Serial.println(PIR);
  if(PIR == 0){
  if(rc.decode(&results)){
    switch(results.value){
      case 0xFD807F://move-forward (VOL+)
        Serial.println("forward");
  		analogWrite(module1, speed);
  		analogWrite(module2, speed);
      
  		digitalWrite(input1_m1, HIGH);
  		digitalWrite(input2_m1, LOW);
      
  		digitalWrite(input1_m2, HIGH);
  		digitalWrite(input2_m2, LOW);
      	break;
      case 0xFD20DF://move -> (<<)
        Serial.println("turnLeft");
  		analogWrite(module1, speed);
  		analogWrite(module2, 0);
  
  		digitalWrite(input1_m1, HIGH);
  		digitalWrite(input2_m1, LOW);
  
  		digitalWrite(input1_m2, HIGH);
  		digitalWrite(input2_m2, LOW);
      	break;
      case 0xFDA05F://stop move (>||)
        Serial.println("stop");
  		digitalWrite(input1_m1, LOW);
  		digitalWrite(input2_m1, LOW);
  
  		digitalWrite(input1_m2, LOW);
  		digitalWrite(input2_m2, LOW);
      	break;
      case 0xFD609F://move -> (>>|)
         Serial.println("turnRight");
  		analogWrite(module1, 0);
  		analogWrite(module2, speed);
  
  		digitalWrite(input1_m1, HIGH);
  		digitalWrite(input2_m1, LOW);
  
  		digitalWrite(input1_m2, HIGH);
  		digitalWrite(input2_m2, LOW);
      	break;
      case 0xFD906F://move-backward (VOL-)
        Serial.println("backward");
  		analogWrite(module2, speed);
  		analogWrite(module2, speed);
  
  		digitalWrite(input1_m1, LOW);
  		digitalWrite(input2_m1, HIGH);
  
  		digitalWrite(input1_m2, LOW);
  		digitalWrite(input2_m2, HIGH);
      	break;
    }
    rc.resume();
  }
  }
  if(PIR == 1){
    Serial.println("stop");
  	digitalWrite(input1_m1, LOW);
  	digitalWrite(input2_m1, LOW);
  
  	digitalWrite(input1_m2, LOW);
  	digitalWrite(input2_m2, LOW);
  }
}



